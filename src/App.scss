body {
  min-height: 100vh;
  display: flex;
  font-family: 'Roboto', Arial;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background: hsl(345.38,80.81%,61.18%);
  color: #ffffff;
  .heart-switch {
      margin: 12px 0;
  }
}

.App {
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}



// Ribbon Scene

@import url('https://fonts.googleapis.com/css2?family=Protest+Riot&display=swap');

*, *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
}

body {
  font-family: 'Protest Riot', sans-serif;
  background: hsl(345.38,80.81%,61.18%);
  color: #fff;
  min-height: 100vh;
  display: grid;
  place-items: center;
  perspective: 800px;
  overflow: hidden;
  
  * {
    transform-style: preserve-3d;
  }
}

.scene {
  position: absolute;
  z-index: 10;
  // font-size: 24px;
  animation: scene 45s infinite linear;

  @keyframes scene {
    from { transform: rotate(0deg) rotateX(15deg) rotate(360deg); }
    to { transform: rotate(360deg) rotateX(15deg) rotate(0deg); }
  }
}

.ribbon {
  
  i {
    position: absolute;
    inset: -1.5em -0.5em;
    overflow: hidden;
    z-index: 10;
    transform:
      translate(var(--tx, 0), var(--ty, 0))
      rotateY(var(--ry, 0deg))
      translateZ(calc(0.5em / tan(4.5deg)))
      skewY(5deg)
      scalex(1.02);

    @for $i from 0 to 120 {
      &:nth-child(#{$i + 1}) {
        --left: #{($i + 1) * 0.5}em;
        --ty: #{-10 / 120 * $i + 5}em;
        
        @if ($i < 20) {
          --tx: #{20 - $i}em;
          --fadeLight: #{($i + 200) * .39%};
        } @else if ($i >= 100) {
          --tx: #{($i - 100) * -1}em;
          --fadeLight: #{80 - ($i - 99) * 0%};
        } @else {
          --ry: #{-720 / 80 * ($i - 20) - 0deg};
          --fadeLight: calc((sin(var(--ry) + 90deg) + 1) * 30% + 20%);
        }
      }
    }
    
    --bgColor: hsl(51, 71%, 41%); /* Pinkish-red color */
    --lightBgColor: hsl(345.38,80.81%, calc(var(--fadeLight) * .5)); /* Lighter pinkish-red color */
    --color: hsl(0, 0%, 100%);
    
    &::after {
      content: "Will you be my valentine?";
      z-index: 100;
      position: absolute;
      display: grid;
      place-items: center;
      top: 50%; left: var(--left);
      width: 36em; height: 100%;
      color: var(--color);
      font-size: 2em;
      background-image: linear-gradient(
        -60deg,
        transparent 1em,
        var(--lightBgColor) 0 31em,
        transparent 0
      ),
      linear-gradient(
        60deg,
        transparent 1em,
        var(--lightBgColor) 0 31em,
        transparent 0
      );
      font-style: normal;
      text-shadow: 0 0 0.1em #0007;
      animation: text 16s infinite ease-in-out;
      
      @keyframes text {
        0% { translate: 0em -50%; }
        45% { translate: -49.5em -50%; }
        55% { translate: -47em -50%; }
        100% { translate: -96.5em -50%; }
      }
    }
  }
}


#heart-container {
    perspective: 30vmin;
    width: 100vw;
    height: 100vh;
    background-color: #270f34;
    display: grid;
    grid-template-columns: repeat(30, 1fr);
}

#heart-container:after, #heart-container:before {
    content: '';
    background: radial-gradient(#51eaea, #fffde1, #ff9d76, #FB3569);
    position: absolute;
    width: 6px;
    height: 6px;
    border-radius: 50%;
}

#heart-container:after {
    top: random(100%);
    left: random(100%);
}

#heart-container:before {
    top: random(100%);
    left: random(100%);
}

#heart-container {
    animation: scale-up 12s linear infinite;
}

@keyframes scale-up {
    0%, 95.01%, 100% {
        transform: translateZ(0) rotate(0);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    95% {
        transform: translateZ(35vmin) rotateZ(calc(-180deg + 360deg * random()));
    }
}




  
